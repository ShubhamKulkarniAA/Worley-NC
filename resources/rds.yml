AWSTemplateFormatVersion: '2010-09-09'
Description: Amazon Aurora PostgreSQL Database

Parameters:
  VpcName:
    Type: String
  InstanceType:
    Type: String
    AllowedValues:
      - db.r4.large
      - db.r4.xlarge
  DBEngineVersion:
    Type: String
  DBClusterName:
    Type: String
    AllowedValues:
      - "16.1"
      - "16.2"
      - "16.3"
  DBName:
    Type: String
  DBBackupRetentionPeriod:
    Type: String
    AllowedValues:
      - "35"
  Backupwindow:
    Description: >-
      The daily time range (in UTC) during which automated backups are created if automated backups are enabled.
      Format: hh24:mi-hh24:mi  Example: 22:00-23:00
      Constraints :
        Must be in the format hh24:mi-hh24:mi.
        Must be in Universal Coordinated Time (UTC).
        Must not conflict with the preferred maintenance window.
        Must be at least 30 minutes.
        Window should be in multiple of 30 minutes e.g. 22:00-22:59 not accepted
    Type: String
    #AllowedPattern: "^((0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]-(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])$"
    AllowedPattern: "^((0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]-(0[0-9]|1[0-9]|2[0-3]):[0|3][0])$"
    ConstraintDescription: Backupwindow format should be hh24:mi-hh24:mi
    Default: '00:00-01:00'
  Maintenancewindow:
    Description: >-
      The weekly time range (in UTC) during which system maintenance can occur.
      Format: ddd:hh24:mi-ddd:hh24:mi Example: Mon:02:00-Mon:03:00
      Constraints:
          Must be in the format ddd:hh24:mi-ddd:hh24:mi.
          Must be in Universal Coordinated Time (UTC).
          Must not conflict with backup window.
          Minimum 30-minute window
          Window should be in multiple of 30 minutes e.g. Mon:22:00-Mon:22:59 not accepted
    Type: String
    #AllowedPattern: "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]-(Mon|Tue|Wed|Thu|Fri|Sat|Sun):(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9])$"
    AllowedPattern: "^((Mon|Tue|Wed|Thu|Fri|Sat|Sun):(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]-(Mon|Tue|Wed|Thu|Fri|Sat|Sun):(0[0-9]|1[0-9]|2[0-3]):[0|3][0])$"
    ConstraintDescription: Maintenancewindow format should be ddd:hh24:mi-ddd:hh24:mi e.g. Mon:02:00-Mon:03:00
    Default: 'Mon:02:00-Mon:03:00'
  DBEngineName:
    Type: String
    AllowedValues:
      - "mysql"
      - "aurora-postgresql"
  DBInstnaceName:
    Type: String
  MonitoringInterval:
    Type: String
    AllowedValues:
      - 0
      - 1
      - 5
      - 10
      - 15
      - 30
      - 60
  PerformanceInsightsRetentionPeriod:
    Type: String
    AllowedValues:
      - 7
      - 731
Resources:
                 
  DBOptionGroup:
    Type: 'AWS::RDS::OptionGroup'
    Properties:
      EngineName: !Ref DBEngineName
      MajorEngineVersion: !Ref DBEngineVersion
      OptionGroupDescription: option group for aurora-postgresql

  DBClusterParameterGroup:
    Type: AWS::RDS::DBClusterParameterGroup
    Properties:
      Description: !Join [' ', ['Cluster Parameter Group For Aurora PostgreSQL Cluster - ',!Ref DBClusterName]]
      Family: !FindInMap [DBFamilyMap, !Ref DBEngineVersion, "family"]
      Parameters:
        rds.force_ssl : 1
        rds.restrict_password_commands : 1

  DBParameterGroup:
    Type: "AWS::RDS::DBParameterGroup"
    Properties:
      Description: !Join [' ', ['Parameter Group For Aurora PostgreSQL Cluster - ',!Ref DBClusterName]]
      Family: !FindInMap [DBFamilyMap, !Ref DBEngineVersion, "family"]
      Parameters:
          log_disconnections : 1
          log_connections : 1
          rds.log_retention_period : 10080

  DBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties: 
      DBSubnetGroupDescription: "Subnet group for Aurora DB cluster"
      SubnetIds: 
        - !ImportValue 
          Fn::Sub: "${VpcName}-PrivateSubnet1Id"
        - !ImportValue 
          Fn::Sub: "${VpcName}-PrivateSubnet2Id"

  DBSecurityGroup:  
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Allow inbound traffic to Aurora
      VpcId: !ImportValue 
        Fn::Sub: '${VpcName}-VpcId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432 
          ToPort: 5432
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
                     
  DBSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: RDSDBSecret
      Description: "RDS credentials for MyRDSInstance"
      GenerateSecretString:
        SecretStringTemplate: '{"username": "dbadminuser"}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\\'

  DBCluster:
    Type: 'AWS::RDS::DBCluster'
    Properties:
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      DBClusterIdentifier: !Ref DBClusterName
      MasterUsername: !Join
          - ''
          - - '{{resolve:secretsmanager:'
            - !Ref DBSecret
            - ':SecretString:username}}' 
      MasterUserPassword: !Join
          - ''
          - - '{{resolve:secretsmanager:'
            - !Ref DBSecret
            - ':SecretString:password}}'
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref DBSecurityGroup
      BackupRetentionPeriod: !Ref DBBackupRetentionPeriod
      PreferredBackupWindow: !Ref Backupwindow
      PreferredMaintenanceWindow: !Ref Maintenancewindow
      StorageEncrypted: true
      DatabaseName: !Ref DBName
      DBClusterParameterGroupName: !Ref DBClusterParameterGroup

  DBInstance:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBInstanceIdentifier: !Ref DBInstnaceName
      DBClusterIdentifier: !Ref DBCluster
      DBInstanceClass: !Ref InstanceType
      Engine: aurora-postgresql
      EngineVersion: !Ref DBEngineVersion
      MonitoringInterval: !Ref MonitoringInterval
      AutoMinorVersionUpgrade: true
      EnablePerformanceInsights: true
      PerformanceInsightsRetentionPeriod: !Ref PerformanceInsightsRetentionPeriod
      PubliclyAccessible: false
      DBParameterGroupName: !Ref DBParameterGroup

Outputs:
  DBClusterEndpoint:
    Description: The endpoint of the Aurora DB cluster
    Value: !GetAtt DBCluster.Endpoint.Address

  DBClusterReadEndpoint:
    Description: The read-only endpoint of the Aurora DB cluster
    Value: !GetAtt DBCluster.ReadEndpoint.Address